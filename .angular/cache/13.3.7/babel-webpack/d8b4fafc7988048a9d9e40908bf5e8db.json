{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { TokenService } from '../token/token.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../token/token.service\";\nimport * as i3 from \"@angular/common/http\";\nconst API = '/api';\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(router, tokenService, http) {\n      this.router = router;\n      this.tokenService = tokenService;\n      this.http = http;\n      this.usuarioAutenticado = false;\n      this.mostrarMenuEmitter = new EventEmitter();\n    }\n\n    fazerLogin(usuario) {\n      if (usuario.login == 'user' && usuario.senha == '123') {\n        this.usuarioAutenticado = false;\n        this.mostrarMenuEmitter.emit(false);\n        this.router.navigate(['/pet-lista']);\n      } else {\n        this.usuarioAutenticado = false;\n        this.mostrarMenuEmitter.emit(false);\n        alert('Usuario ou senha errados!');\n        this.router.navigate(['/login']);\n      }\n    }\n\n    usuarioEstaAutenticado() {\n      return this.usuarioAutenticado;\n    }\n\n    fazerLoginLoiane(usuario) {} //'multipart/form-data; charset=utf-8'\n\n\n    fazerLoginAlura(form) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        }),\n        body: form\n      };\n      console.log(form);\n      return this.http.post(`${environment.API}auth`, form, {\n        observe: 'response'\n      }).pipe(tap(res => {\n        const authToken = res.headers.get('x-access-token');\n        console.log(\"authToken\");\n        window.localStorage.setItem('authToken', authToken);\n        console.log(\"authToken\");\n        this.tokenService.setToken(authToken);\n        console.log(authToken);\n        console.log(\"authToken\");\n      }));\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.TokenService), i0.ɵɵinject(i3.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}